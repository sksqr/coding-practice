package com.practice.binarysearch;

import java.util.Arrays;
import java.util.List;

public class RotatedArray {

  public static void main(String[] args) {
    List<Integer> A = Arrays.asList(4, 5, 6, 7, 0, 1, 2);
    List<Integer> B = Arrays.asList( 48331635, 48333148, 48333672, 48337740, 48342309, 48343584, 48345076, 48351875, 48355149, 48355755, 48356458, 48366125, 48369639, 48369926, 48370295, 48371267, 48376637, 48377600, 48380569, 48385496, 48386317, 48388174, 48389460, 48394876, 48397618, 48404949, 48405596, 48409427, 48413250, 48417899, 48422653, 48423886, 48424107, 48427209, 48433272, 48433361, 48440628, 48445884, 48446065, 48446169, 48446259, 48456864, 48458578, 48460040, 48464448, 48464687, 48475272, 48481853, 48484833, 48489192, 48493669, 48493839, 48493933, 48495792, 48497116, 48498111, 48500192, 48501500, 48514224, 48515498, 48517923, 48520090, 48522034, 48522762, 48525667, 48527270, 48527390, 48527520, 48528420, 48528544, 48528759, 48529206, 48541060, 48544076, 48545768, 48546427, 48547435, 48549592, 48553535, 48554584, 48554792, 48558352, 48559690, 48561743, 48567106, 48568332, 48569687, 48573728, 48575154, 48576094, 48579276, 48580651, 48581623, 48582677, 48584600, 48587514, 48590770, 48595279, 48600501, 48602057, 48602562, 48613079, 48617154, 48617595, 48617955, 48620096, 48620209, 48624086, 48626207, 48630290, 48641017, 48642761, 48647107, 48656122, 48660644, 48662748, 48665858, 48667246, 48667883, 48677420, 48682152, 48689282, 48690089, 48691314, 48691933, 48707095, 48708959, 48710364, 48711436, 48712458, 48713216, 48719963, 48729863, 48739417, 48742460, 48743752, 48744351, 48744484, 48746956, 48748375, 48753863, 48757944, 48759946, 48761847, 48763997, 48764439, 48766360, 48768084, 48768652, 48772637, 48773094, 48774506, 48775488, 48775728, 48778244, 48779600, 48782891, 48789933, 48792156, 48793294, 48797321, 48798031, 48798176, 48811978, 48813991, 48817180, 48820172, 48827107, 48829080, 48831072, 48832099, 48835670, 48839193, 48845238, 48848168, 48850509, 48851689, 48855454, 48856842, 48857513, 48858454, 48858735, 48860743, 48861564, 48864980, 48865703, 48872505, 48873031, 48878604, 48879789, 48879956, 48879967, 48883559, 48884984, 48886405, 48891679, 48894456, 48903717, 48906480, 48906979, 48907848, 48909922, 48911433, 48911488, 48913646, 48933268, 48933830, 48939800, 48943250, 48943497, 48949582, 48955080, 48957367, 48964878, 48971906, 48976508, 48976537, 48977189, 48979722, 48980844, 48981275, 48981304, 48985930, 48987777, 48988793, 48989108, 48990600, 48993062, 48993436, 48993853, 48995557, 48995610, 48998112, 48998617, 49001278, 49001926, 49003771, 49003787, 49005809, 49006754, 49009732, 49009920, 49012082, 49012226, 49013672, 49016134, 49016586, 49018829, 49019595, 49028104, 49029190, 49029670, 49029788, 49030916, 49032671, 49032850, 49033275, 49040869, 49041057, 49047096, 49048021, 49048852, 49050592, 49054392, 49055308, 49057607, 49057992, 49058597, 49059125, 49062154, 49067653, 49068114, 49070322, 49072444, 49075573, 49078922, 49080376, 49082660, 49084075, 49086073, 49090060, 49090628, 49094536, 49095055, 49095200, 49095941, 49100404, 49101326, 49107236, 49109936, 49111906, 49118649, 49120548, 49122087, 49122775, 49123768, 49124497, 49136467, 49141039, 49142237, 49148429, 49149551, 49150798, 49154114, 49155557, 49156038, 49156539, 49158920, 49159096, 49162253, 49171232, 49171684, 49175647, 49176972, 49179158, 49180002, 49181480, 49186692, 49192183, 49195728, 49196695, 49198804, 49200887, 49207606, 49208095, 49209256, 49209986, 49212308, 49214019, 49219139, 49221026, 49223513, 49227030, 49228219, 49231233, 49238164, 49245031, 49248219, 49250437, 49250902, 49251344, 49251896, 49252275, 49252925, 49252992, 49253098, 49253104, 49258436, 49258520, 49261776, 49264475, 49269228, 49270609, 49273704, 49273856, 49275047, 49281340, 49290062, 49290234, 49290931, 49291142, 49293863, 49296772, 49298979, 49300909, 49301339, 49301637, 49307012, 49309714, 49309869, 49312617, 49315951, 49317109, 49318238, 49321952, 49323041, 49323051, 49324335, 49324408, 49326491, 49329233, 49337185, 49341024, 49344800, 49345104, 49345231, 49354153, 49355271, 49356405, 49362851, 49362893, 49363077, 49366076, 49367132, 49368074, 49369571, 49369716, 49370080, 49372388, 49372796, 49375522, 49376201, 49376621, 49377581, 49378266, 49380634, 49382357, 49382432, 49384459, 49392983, 49394099, 49395148, 49397661, 49403266, 49404848, 49405022, 49405907, 49405968, 49408088, 49409878, 49411135, 49417497, 49417657, 49417939, 49430831, 49432742, 49432801, 49433723, 49435657, 49437070, 49443453, 49443663, 49445622, 49447036, 49447895, 49449741, 49452686, 49453824, 49455842, 49456021, 49456132, 49456353, 49456778, 49460508, 49462306, 49468162, 49471598, 49473378, 49474673, 49476215, 49478475, 49479939, 49486546, 49486811, 49490742, 49490812, 49491237, 49492608, 49495266, 49496012, 49503753, 49506715, 49510012, 49514244, 49516631, 49517697, 49519246, 49522604, 49523903, 49526868, 49528008, 49533270, 49533770, 49535115, 49535519, 49538789, 49541864, 49544239, 49548009, 49550171, 49555376, 49555571, 49557493, 49558854, 49564339, 49566727, 49574625, 49575494, 49575605, 49575668, 49575858, 49579232, 49585836, 49586011, 49586434, 49589141, 49589470, 49589482, 49590286, 49591862, 49594456, 49595186, 49600679, 49600793, 49606094, 49606430, 49606635, 49608809, 49610045, 49615233, 49616893, 49619681, 49619947, 49621373, 49622731, 49623323, 49626103, 49626706, 49627312, 49631531, 49635087, 49635882, 49640918, 49641305, 49648411, 49649720, 49651263, 49651737, 49656205, 49658734, 49659096, 49662196, 49665789, 49666423, 49666839, 49670083, 49674072, 49676873, 49687545, 49690442, 49695320, 49697968, 49698673, 49699979, 49705093, 49708419, 49714817, 49724087, 49725362, 49730306, 49730662, 49734405, 49739939, 49742243, 49743165, 49743879, 49744964, 49746439, 49747471, 49750149, 49757838, 49758676, 49759068, 49759152, 49777768, 49779926, 49780369, 49781705, 49781988, 49787704, 49787811, 49788083, 49789305, 49794824, 49796274, 49796328, 49796824, 49800427, 49800959, 49801032, 49802275, 49808827, 49809452, 49811414, 49812624, 49813102, 49814023, 49816028, 49820450, 49822204, 49826266, 49829937, 49830064, 49830323, 49832744, 49834089, 49836922, 49840805, 49841665, 49841759, 49842509, 49844782, 49847000, 49847253, 49847774, 49849710, 49854740, 49856988, 49863026, 49863988, 49865221, 49870186, 49872789, 49876892, 49881084, 49882858, 49883243, 49884156, 49887588, 49887891, 49888251, 49897349, 49898140, 49904109, 49912903, 49913257, 49915406, 49916503, 49917857, 49921118, 49926382, 49926488, 49927760, 49931815, 49934062, 49935466, 49941482, 49943076, 49945564, 49947404, 49959055, 49959859, 49965839, 49966249, 49967876, 49974042, 49974427, 49974464, 49978126, 49981786, 49990313, 49990424, 49995596, 49995846, 49996491, 49998493, 50003330, 50007321, 50008609, 50010720, 50011107, 50015136, 50016101, 50016171, 50016632, 50017313, 50017404, 50019246, 50020869, 50023115, 50027542, 50027595, 50030194, 50038568, 50043115, 50045670, 50046748, 50056659, 50057008, 50057471, 50059756, 50060203, 50064324, 50072967, 50073323, 50078152, 50079910, 50080240, 50080581, 50088860, 50089057, 50090362, 50099116, 50101187, 50105455, 50107019, 50107106, 50112287, 50119354, 50120265, 50121137, 50126910, 50127799, 50128620, 50130646, 50131481, 50134668, 50135328, 50135785, 50136872, 50140120, 50143136, 50144230, 50145683, 50147348, 50157944, 50158511, 50163067, 50166685, 50168299, 50169304, 50182107, 50189060, 50202278, 50214320, 50219674, 50224332, 50224706, 50225705, 50227759, 50228002, 50230263, 50232288, 50235319, 50240797, 50243113, 50245319, 50246120, 50250331, 50251672, 50251728, 50252085, 50253037, 50256049, 50259247, 50261587, 50266041, 50267411, 50268601, 50269730, 50272424, 50272649, 50276434, 50284118, 50285532, 50288736, 50290159, 50292429, 50293470, 50295358, 50296124, 50306370, 50308091, 50314027, 50316917, 50318293, 50321870, 50326547, 50327161, 50329051, 50331191, 50334381, 50338457, 50341098, 50342011, 50354710, 50360011, 50360655, 50363697, 50363785, 50364948, 50367851, 50368492, 50369758, 50372992, 50377153, 50379001, 50382339, 50384134, 50385551, 50390292, 50390722, 50392719, 50393311, 50394005, 50394260, 50394680, 50395368, 50395635, 50397445, 50400989, 50406157, 50406858, 50409592, 50410698, 50411446, 50414939, 50416245, 50426969, 50429539, 50429988, 50432513, 50434067, 50434136, 50434310, 50436671, 50439848, 50440963, 50443243, 50445680, 50448010, 50451884, 50453451, 50456950, 50462291, 50467319, 50471129, 50477916, 50479231, 50482157, 50482445, 50485975, 50486048, 50488524, 50489415, 50492936, 50493921, 50494506, 50496704, 50496706, 50501400, 50502423, 50505024, 50505645, 50505892, 50511449, 50511927, 50513559, 50518189, 50518326, 50521174, 50526667, 50530225, 50531206, 50532622, 50533968, 50535642, 50536259, 50536973, 50537830, 50542379, 50542832, 50544095, 50545859, 50551615, 50555447, 50557469, 50559059, 50561095, 50562456, 50562584, 50564505, 50568281, 50569406, 50569638, 50576636, 50585930, 50587166, 50589221, 50592777, 50593495, 50595833, 50602536, 50603767, 50604506, 50604850, 50605710, 50606126, 50607950, 50609763, 50609885, 50610459, 50613502, 50613802, 50616645, 50620310, 50621912, 50624606, 50627654, 50634709, 50635871, 50636980, 50644047, 50644059, 50644387, 50647550, 50651616, 50653531, 50654958, 50657708, 50659073, 50660285, 50660571, 50661861, 50664522, 50665107, 50672221, 50672664, 50675204, 50678574, 50680116, 50681335, 50681504, 50682826, 50689983, 50696153, 50699537, 50701169, 50701907, 50704409, 50704963, 50705186, 50705875, 50707208, 50710681, 50711945, 50717033, 50717225, 50719987, 50721064, 50721322, 50722332, 50725409, 50725753, 50733851, 50734662, 50736810, 50742020, 50743876, 50744965, 50746380, 50752824, 50761760, 50771672, 50775839, 50776919, 50777711, 50782033, 50786503, 50786735, 50789312, 50804454, 50807599, 50808806, 50809237, 50809597, 50813867, 50824042, 50828189, 50832534, 50834297, 50835668, 50839318, 50839582, 50841846, 50846654, 50849054, 50857673, 50858572, 50859028, 50860606, 50867837, 50868622, 50870833, 50873098, 50876959, 50877019, 50878362, 50885308, 50887892, 50888126, 50888230, 50891307, 50892645, 50893286, 50894066, 50895078, 50899934, 50904005, 50908236, 50914090, 50918815, 50921718, 50923911, 50926387, 50926788, 50927646, 50928084, 50928744, 50934707, 50937655, 50938047, 50939356, 50943275, 50945971, 50950067, 50950285, 50950717, 50951847, 50952388, 50953081, 50953876, 50958376, 50960367, 50971638, 50974010, 50977369, 50978784, 50979688, 50982558, 50990746, 51000326, 51000810, 51001433, 51004150, 51004898, 51005566, 51006581, 51007662, 51011397, 51013158, 51016455, 51018735, 51020179, 51022935, 51023028, 51027640, 51029310, 51030308, 51030542, 51031514, 51032728, 51034229, 51036557, 51036860, 51037072, 51038819, 51039338, 51041540, 51042486, 51044133, 51056822, 51056990, 51057368, 51058572, 51059449, 51062813, 51064824, 51064921, 51067146, 51069426, 51073908, 51075203, 51079004, 51080234, 51084403, 51087134, 51092334, 51094291, 51099273, 51100579, 51100990, 51102551, 51103254, 51105814, 51106087, 51106575, 51108217, 51114997, 51116887, 51118522, 51119771, 51119888, 51121505, 51123406, 51128160, 51133432, 51134727, 51135479, 51137375, 51141641, 51144361, 51146846, 51149464, 51154233, 51157908, 51161193, 51161455, 51170574, 51171089);
    //48331635
    List<Integer> C = Arrays.asList(40342, 40766, 41307, 42639, 42777, 46079, 47038, 47923, 48064, 48083, 49760, 49871, 51000, 51035, 53186, 53499, 53895, 59118, 60467, 60498, 60764, 65158, 65838, 65885, 65919, 66638, 66807, 66989, 67114, 68119, 68146, 68584, 69494, 70914, 72312, 72432, 74536, 77038, 77720, 78590, 78769, 78894, 80169, 81717, 81760, 82124, 82583, 82620, 82877, 83131, 84932, 85050, 85358, 89896, 90991, 91348, 91376, 92786, 93626, 93688, 94972, 95064, 96240, 96308, 96755, 97197, 97243, 98049, 98407, 98998, 99785, 350, 2563, 3075, 3161, 3519, 4176, 4371, 5885, 6054, 6495, 7218, 7734, 9235, 11899, 13070, 14002, 16258, 16309, 16461, 17338, 19141, 19526, 21256, 21507, 21945, 22753, 25029, 25524, 27311, 27609, 28217, 30854, 32721, 33184, 34190, 35040, 35753, 36144, 37342);
    //350
    List<Integer> D = Arrays.asList(1);
    System.out.println(findMin(C));
  }
  public static int findMin(final List<Integer> a) {
//    return  a.stream().min((i1,i2)->i1-i2).get();
//    if(a.size()==1){
//      return a.get(0);
//    }
    return getMin(a,0,a.size());
  }

  private static int getMin(final List<Integer> a, int low, int high){
    if(low >= high){
      return Integer.MAX_VALUE;
    }
    if(a.get(low) <= a.get(high-1)){
      return a.get(low);
    }
    int mid = (low+high)/2;
    return Math.min(getMin(a,low,mid),getMin(a,mid,high));

  }

}
